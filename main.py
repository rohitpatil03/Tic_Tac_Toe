# -*- coding: utf-8 -*-

# self implementation generated from reading ui file 'game.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys

from controller import Method




method = None
with_ai = False
colour_player_1 = None
colour_player_2 = None
first = None


class Application(QtWidgets.QDialog):

    def __init__(self):
        super().__init__()

        self.setWindowTitle("TIC TAC TOE")
        self.resize(938, 728)
        self.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.grid = QtWidgets.QGridLayout(self)

        self.frame = QtWidgets.QFrame(self)
        self.frame.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.vbox_1 = QtWidgets.QVBoxLayout(self.frame)
        self.label = QtWidgets.QLabel(self.frame, text="TIC TAC TOE")
        self.label.setStyleSheet("color:green;font-weight: bold;")
        self.label.setFont(QtGui.QFont("Decorative", 50))
        self.label.setAlignment(QtCore.Qt.AlignCenter)


        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        vertical_spacer = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        horizontal_spacer = QtWidgets.QSpacerItem(
            35, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)

        self.start_btn_single_player = QtWidgets.QPushButton(
            self.frame, text="SINGLE PLAYER")
        self.start_btn_single_player.setStyleSheet(
            "QPushButton{background-color:orange;color:white;border-radius: 8px;font-size:40px;font-weight: bold;}""QPushButton::hover""{""background-color : red;font-weight: bold;""}")
        self.start_btn_single_player.setSizePolicy(sizePolicy)
        self.start_btn_single_player.clicked.connect(self.start_single_player)

        self.start_btn_multi_player = QtWidgets.QPushButton(
            self.frame, text="TWO PLAYER")
        self.start_btn_multi_player.setStyleSheet(
            "QPushButton{background-color:orange;color:white;border-radius: 8px;font-size:40px;font-weight: bold;}""QPushButton::hover""{""background-color : red;font-weight: bold;""}")
        self.start_btn_multi_player.setSizePolicy(sizePolicy)
        self.start_btn_multi_player.clicked.connect(self.start_multi_player)

        self.hbox_1 = QtWidgets.QHBoxLayout(self)
        self.hbox_1.addItem(horizontal_spacer)
        self.hbox_1.addItem(horizontal_spacer)
        self.hbox_1.addWidget(self.start_btn_single_player)
        self.hbox_1.addItem(horizontal_spacer)
        self.hbox_1.addWidget(self.start_btn_multi_player)
        self.hbox_1.addItem(horizontal_spacer)
        self.hbox_1.addItem(horizontal_spacer)

        self.vbox_1.addWidget(self.label)
        self.vbox_1.addItem(vertical_spacer)
        self.vbox_1.addItem(vertical_spacer)
        self.vbox_1.addLayout(self.hbox_1)
        self.vbox_1.addItem(vertical_spacer)
        self.vbox_1.addItem(vertical_spacer)
        

        self.grid.addWidget(self.frame, 1, 1, 1, 1)

        self.setLayout(self.grid)
        self.show()

    def start_multi_player(self):
        self.frame.hide()    

        self.frame_1 = QtWidgets.QFrame(self)

        self.vbox = QtWidgets.QVBoxLayout(self.frame_1)
        self.frame_1.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.player_1_textbox = QtWidgets.QLineEdit(self.frame_1)
        self.player_1_textbox.setStyleSheet("border: 5px solid black;border-radius: 10px;padding: 10px 10px")
        self.player_1_textbox.setText("HUMAN 1")
        for_font_size_1 = self.player_1_textbox.font()
        for_font_size_1.setPointSize(20)
        self.player_1_textbox.setFont(for_font_size_1)
        self.player_1_textbox.setFixedHeight(65)

        self.player_2_textbox = QtWidgets.QLineEdit(self.frame_1)
        self.player_2_textbox.setStyleSheet("border: 5px solid black;border-radius: 10px;padding: 10px 10px")
        self.player_2_textbox.setText("HUMAN 2")
        for_font_size_2 = self.player_2_textbox.font()
        for_font_size_2.setPointSize(20)
        self.player_2_textbox.setFont(for_font_size_2)
        self.player_2_textbox.setFixedHeight(65)

        vertical_spacer = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)

        self.colour_red_player_1 = QtWidgets.QPushButton(self.frame_1)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.colour_red_player_1.sizePolicy().hasHeightForWidth())
        self.colour_red_player_1.setSizePolicy(sizePolicy)
        self.colour_red_player_1.setStyleSheet(
            "background-color: rgb(255, 0, 0); border: none;border-radius: 15px")

        self.colour_green_player_1 = QtWidgets.QPushButton(self.frame_1)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.colour_green_player_1.sizePolicy().hasHeightForWidth())
        self.colour_green_player_1.setSizePolicy(sizePolicy)
        self.colour_green_player_1.setStyleSheet(
            "background-color: rgb(0, 255, 0); border: none;border-radius: 15px")

        self.colour_blue_player_1 = QtWidgets.QPushButton(self.frame_1)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.colour_blue_player_1.sizePolicy().hasHeightForWidth())
        self.colour_blue_player_1.setSizePolicy(sizePolicy)
        self.colour_blue_player_1.setStyleSheet(
            "background-color: rgb(0, 0, 255); border: none;border-radius: 15px")

        self.colour_hbox_player_1 = QtWidgets.QHBoxLayout(self.frame_1)
        self.colour_hbox_player_1.addWidget(self.colour_red_player_1)
        self.colour_hbox_player_1.addWidget(self.colour_green_player_1)
        self.colour_hbox_player_1.addWidget(self.colour_blue_player_1)

        self.colour_red_player_2 = QtWidgets.QPushButton(self.frame_1)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.colour_red_player_2.sizePolicy().hasHeightForWidth())
        self.colour_red_player_2.setSizePolicy(sizePolicy)
        self.colour_red_player_2.setStyleSheet(
            "background-color: rgb(255, 0, 0); border: none;border-radius: 15px")

        self.colour_green_player_2 = QtWidgets.QPushButton(self.frame_1)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.colour_green_player_2.sizePolicy().hasHeightForWidth())
        self.colour_green_player_2.setSizePolicy(sizePolicy)
        self.colour_green_player_2.setStyleSheet(
            "background-color: rgb(0, 255, 0); border: none;border-radius: 15px")

        self.colour_blue_player_2 = QtWidgets.QPushButton(self.frame_1)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.colour_blue_player_2.sizePolicy().hasHeightForWidth())
        self.colour_blue_player_2.setSizePolicy(sizePolicy)
        self.colour_blue_player_2.setStyleSheet(
            "background-color: rgb(0, 0, 255); border: none;border-radius: 15px")

        self.colour_hbox_player_2 = QtWidgets.QHBoxLayout(self.frame_1)
        self.colour_hbox_player_2.addWidget(self.colour_red_player_2)
        self.colour_hbox_player_2.addWidget(self.colour_green_player_2)
        self.colour_hbox_player_2.addWidget(self.colour_blue_player_2)

        self.colour_red_player_1.clicked.connect(
            self.make_selection_player_1("background-color: rgb(255, 0, 0);"))
        self.colour_green_player_1.clicked.connect(
            self.make_selection_player_1("background-color: rgb(0, 255, 0);"))
        self.colour_blue_player_1.clicked.connect(
            self.make_selection_player_1("background-color: rgb(0, 0, 255);"))

        self.colour_red_player_2.clicked.connect(
            self.make_selection_player_2("background-color: rgb(255, 0, 0);"))
        self.colour_green_player_2.clicked.connect(
            self.make_selection_player_2("background-color: rgb(0, 255, 0);"))
        self.colour_blue_player_2.clicked.connect(
            self.make_selection_player_2("background-color: rgb(0, 0, 255);"))

        self.colour_red_player_1.click()
        self.colour_green_player_2.click()

        sizePolicy_1 = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        vertical_spacer = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        horizontal_spacer = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)

        self.game_btn = QtWidgets.QPushButton(self.frame, text="START")
        self.game_btn.setStyleSheet(
            "QPushButton{background-color:orange;color:white;border-radius: 8px;font-size:40px;font-weight: bold;}""QPushButton::hover""{""background-color : red;font-weight: bold;""}")
        self.game_btn.setSizePolicy(sizePolicy_1)
        self.game_btn.clicked.connect(self.game)

        self.hbox = QtWidgets.QHBoxLayout(self.frame_1)
        self.hbox.addItem(horizontal_spacer)
        self.hbox.addItem(horizontal_spacer)
        self.hbox.addWidget(self.game_btn)
        self.hbox.addItem(horizontal_spacer)
        self.hbox.addItem(horizontal_spacer)

        self.vbox.addItem(vertical_spacer)
        self.vbox.addWidget(self.player_1_textbox)
        self.vbox.addItem(vertical_spacer)
        self.vbox.addLayout(self.colour_hbox_player_1)
        self.vbox.addItem(vertical_spacer)
        self.vbox.addWidget(self.player_2_textbox)
        self.vbox.addItem(vertical_spacer)
        self.vbox.addLayout(self.colour_hbox_player_2)
        self.vbox.addItem(vertical_spacer)
        self.vbox.addLayout(self.hbox)
        self.vbox.addItem(vertical_spacer)

        self.grid.addWidget(self.frame_1, 1, 1, 1, 1)

        

        self.setLayout(self.grid)
        self.show()

    def start_single_player(self):
        global with_ai

        self.frame.hide()
        with_ai = True
        self.frame_1 = QtWidgets.QFrame(self)

        self.vbox = QtWidgets.QVBoxLayout(self.frame_1)
        self.frame_1.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.player_1_textbox = QtWidgets.QLineEdit(self.frame_1)
        self.player_1_textbox.setText("HUMAN")
        self.player_1_textbox.setStyleSheet("border: 5px solid black;border-radius: 10px;padding: 10px 10px")
        for_font_size_1 = self.player_1_textbox.font()
        for_font_size_1.setPointSize(20)
        self.player_1_textbox.setFont(for_font_size_1)
        self.player_1_textbox.setFixedHeight(65)

        vertical_spacer = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)

        self.colour_red_player_1 = QtWidgets.QPushButton(self.frame_1)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.colour_red_player_1.sizePolicy().hasHeightForWidth())
        self.colour_red_player_1.setSizePolicy(sizePolicy)
        self.colour_red_player_1.setStyleSheet(
            "background-color: rgb(255, 0, 0); border: none;border-radius: 15px")

        self.colour_green_player_1 = QtWidgets.QPushButton(self.frame_1)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.colour_green_player_1.sizePolicy().hasHeightForWidth())
        self.colour_green_player_1.setSizePolicy(sizePolicy)
        self.colour_green_player_1.setStyleSheet(
            "background-color: rgb(0, 255, 0); border: none;border-radius: 15px")

        self.colour_blue_player_1 = QtWidgets.QPushButton(self.frame_1)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.colour_blue_player_1.sizePolicy().hasHeightForWidth())
        self.colour_blue_player_1.setSizePolicy(sizePolicy)
        self.colour_blue_player_1.setStyleSheet(
            "background-color: rgb(0, 0, 255); border: none;border-radius: 15px")

        self.colour_hbox_player_1 = QtWidgets.QHBoxLayout(self.frame_1)
        self.colour_hbox_player_1.addWidget(self.colour_red_player_1)
        self.colour_hbox_player_1.addWidget(self.colour_green_player_1)
        self.colour_hbox_player_1.addWidget(self.colour_blue_player_1)

        self.whose_first = QtWidgets.QLabel(self.frame_1, text="WOULD YOU LIKE TO GO FIRST ??")
        self.whose_first.setStyleSheet("color:green;font-weight: bold;")
        self.whose_first.setFont(QtGui.QFont("Decorative", 20))
        self.whose_first.setAlignment(QtCore.Qt.AlignCenter)

        self.whose_first_yes = QtWidgets.QPushButton(self.frame_1)
        self.whose_first_yes.setText("YES")
        #self.whose_first_yes.setFont(QtGui.QFont("Times New Roman", 20))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.whose_first_yes.sizePolicy().hasHeightForWidth())
        self.whose_first_yes.setSizePolicy(sizePolicy)
        self.whose_first_yes.clicked.connect(self.yes_first)
        self.whose_first_yes.setStyleSheet(
            "QPushButton{background-color:orange;color:white;border-radius: 8px;font-size:40px;font-weight: bold;}""QPushButton::hover""{""background-color : red;font-weight: bold;""}")

        self.whose_first_no = QtWidgets.QPushButton(self.frame_1)
        self.whose_first_no.setText("NO")
        #self.whose_first_no.setFont(QtGui.QFont("Times New Roman", 20))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.whose_first_no.sizePolicy().hasHeightForWidth())
        self.whose_first_no.setSizePolicy(sizePolicy)
        self.whose_first_no.clicked.connect(self.no_first)
        self.whose_first_no.setStyleSheet(
            "QPushButton{background-color:orange;color:white;border-radius: 8px;font-size:40px;font-weight: bold;}""QPushButton::hover""{""background-color : red;font-weight: bold;""}")

        


        self.colour_red_player_1.clicked.connect(
            self.make_selection_player_1("background-color: rgb(255, 0, 0);"))
        self.colour_green_player_1.clicked.connect(
            self.make_selection_player_1("background-color: rgb(0, 255, 0);"))
        self.colour_blue_player_1.clicked.connect(
            self.make_selection_player_1("background-color: rgb(0, 0, 255);"))

        self.colour_red_player_1.click()

        sizePolicy_1 = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        vertical_spacer = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        horizontal_spacer = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)

        self.whose_first_hbox = QtWidgets.QHBoxLayout(self.frame_1)
        self.whose_first_hbox.addItem(horizontal_spacer)
        self.whose_first_hbox.addWidget(self.whose_first_yes)
        self.whose_first_hbox.addItem(horizontal_spacer)
        self.whose_first_hbox.addWidget(self.whose_first_no)
        self.whose_first_hbox.addItem(horizontal_spacer)

        self.game_btn = QtWidgets.QPushButton(self.frame, text="START")
        self.game_btn.setStyleSheet(
            "QPushButton{background-color:orange;color:white;border-radius: 8px;font-size:40px;}""QPushButton::hover""{""background-color : red;""}")
        self.game_btn.setSizePolicy(sizePolicy_1)
        self.game_btn.clicked.connect(self.game)

        
        

        self.vbox.addItem(vertical_spacer)
        self.vbox.addWidget(self.player_1_textbox)
        self.vbox.addItem(vertical_spacer)
        self.vbox.addLayout(self.colour_hbox_player_1)
        self.vbox.addItem(vertical_spacer)
        
        self.vbox.addItem(vertical_spacer)
        self.vbox.addWidget(self.whose_first)
        self.vbox.addLayout(self.whose_first_hbox)
        self.vbox.addItem(vertical_spacer)
        self.vbox.addItem(vertical_spacer)

        self.grid.addWidget(self.frame_1, 1, 1, 1, 1)

        self.setLayout(self.grid)
        self.show()

    def game(self):
        global method
        timer.stop()
        self.frame_1.hide()

        self.game_frame = QtWidgets.QFrame(self)
        self.game_frame.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.gridLayout = QtWidgets.QGridLayout(self.game_frame)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.game_frame)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pushButton_4 = QtWidgets.QPushButton(self.game_frame)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.pushButton_4.sizePolicy().hasHeightForWidth())
        self.pushButton_4.setSizePolicy(sizePolicy)
        self.pushButton_4.setObjectName("pushButton_4")

        self.horizontalLayout_2.addWidget(self.pushButton_4)
        self.line_3 = QtWidgets.QFrame(self.game_frame)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.horizontalLayout_2.addWidget(self.line_3)
        self.pushButton_5 = QtWidgets.QPushButton(self.game_frame)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.pushButton_5.sizePolicy().hasHeightForWidth())
        self.pushButton_5.setSizePolicy(sizePolicy)
        self.pushButton_5.setObjectName("pushButton_5")
        self.horizontalLayout_2.addWidget(self.pushButton_5)
        self.line_4 = QtWidgets.QFrame(self.game_frame)
        self.line_4.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.horizontalLayout_2.addWidget(self.line_4)
        self.pushButton_6 = QtWidgets.QPushButton(self.game_frame)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.pushButton_6.sizePolicy().hasHeightForWidth())
        self.pushButton_6.setSizePolicy(sizePolicy)
        self.pushButton_6.setObjectName("pushButton_6")
        self.horizontalLayout_2.addWidget(self.pushButton_6)
        self.gridLayout.addLayout(self.horizontalLayout_2, 2, 0, 1, 1)
        self.line_7 = QtWidgets.QFrame(self.game_frame)
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.gridLayout.addWidget(self.line_7, 1, 0, 1, 1)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.game_frame)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_7 = QtWidgets.QPushButton(self.game_frame)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.pushButton_7.sizePolicy().hasHeightForWidth())
        self.pushButton_7.setSizePolicy(sizePolicy)
        self.pushButton_7.setObjectName("pushButton_7")
        self.horizontalLayout_3.addWidget(self.pushButton_7)
        self.line_5 = QtWidgets.QFrame(self.game_frame)
        self.line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.horizontalLayout_3.addWidget(self.line_5)
        self.pushButton_8 = QtWidgets.QPushButton(self.game_frame)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.pushButton_8.sizePolicy().hasHeightForWidth())
        self.pushButton_8.setSizePolicy(sizePolicy)
        self.pushButton_8.setObjectName("pushButton_8")
        self.horizontalLayout_3.addWidget(self.pushButton_8)
        self.line_6 = QtWidgets.QFrame(self.game_frame)
        self.line_6.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.horizontalLayout_3.addWidget(self.line_6)
        self.pushButton_9 = QtWidgets.QPushButton(self.game_frame)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.pushButton_9.sizePolicy().hasHeightForWidth())
        self.pushButton_9.setSizePolicy(sizePolicy)
        self.pushButton_9.setObjectName("pushButton_9")
        self.horizontalLayout_3.addWidget(self.pushButton_9)
        self.gridLayout.addLayout(self.horizontalLayout_3, 4, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.game_frame)
        self.horizontalLayout.setObjectName("horizontalLayout")
        
        self.pushButton = QtWidgets.QPushButton(self.game_frame)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.line = QtWidgets.QFrame(self.game_frame)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.horizontalLayout.addWidget(self.line)
        self.pushButton_2 = QtWidgets.QPushButton(self.game_frame)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        self.line_2 = QtWidgets.QFrame(self.game_frame)
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.horizontalLayout.addWidget(self.line_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.game_frame)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout.addWidget(self.pushButton_3)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.line_8 = QtWidgets.QFrame(self.game_frame)
        self.line_8.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.gridLayout.addWidget(self.line_8, 3, 0, 1, 1)
        self.grid.addWidget(self.game_frame, 1, 1, 1, 1)

        self.pushButton.setStyleSheet(
            "background-color: rgb(255, 255, 255);  border: none;")
        self.pushButton_2.setStyleSheet(
            "background-color: rgb(255, 255, 255);  border: none;")
        self.pushButton_3.setStyleSheet(
            "background-color: rgb(255, 255, 255);  border: none;")
        self.pushButton_4.setStyleSheet(
            "background-color: rgb(255, 255, 255);  border: none;")
        self.pushButton_5.setStyleSheet(
            "background-color: rgb(255, 255, 255);  border: none;")
        self.pushButton_6.setStyleSheet(
            "background-color: rgb(255, 255, 255);  border: none;")
        self.pushButton_7.setStyleSheet(
            "background-color: rgb(255, 255, 255);  border: none;")
        self.pushButton_8.setStyleSheet(
            "background-color: rgb(255, 255, 255);  border: none;")
        self.pushButton_9.setStyleSheet(
            "background-color: rgb(255, 255, 255);  border: none;")

        self.setLayout(self.grid)
        self.game_frame.show()

        # self.numbers = ("1")

        # for n, number in enumerate(self.numbers):

        self.pushButton.clicked.connect(self.make_calluser(1))
        self.pushButton_2.clicked.connect(self.make_calluser(2))
        self.pushButton_3.clicked.connect(self.make_calluser(3))
        self.pushButton_4.clicked.connect(self.make_calluser(4))
        self.pushButton_5.clicked.connect(self.make_calluser(5))
        self.pushButton_6.clicked.connect(self.make_calluser(6))
        self.pushButton_7.clicked.connect(self.make_calluser(7))
        self.pushButton_8.clicked.connect(self.make_calluser(8))
        self.pushButton_9.clicked.connect(self.make_calluser(9))

        if method == None and first == True:
            method = Method(window, colour_player_1, colour_player_2, with_ai, first)
            

    def make_calluser(self, number):
        def calluser():
            global method
            
            if method == None:
                method = Method(window, colour_player_1, colour_player_2, with_ai, first)
            
            method.btn_list(i=(number-1))
        return calluser

    def make_selection_player_1(self, btn_colour):
        def selection_1():
            global colour_player_1, colour_player_2
            try:
                # colour_player_1 = btn_colour
                if (btn_colour != colour_player_2) or (None == colour_player_1 == colour_player_2):
                    colour_player_1 = btn_colour
                    if colour_player_1 == colour_player_2:
                        raise Exception
                    elif colour_player_1 != colour_player_2:
                        self.colour_piker_shower_1(btn_colour)

            except Exception:
                colour_player_1 = btn_colour
        return selection_1

    def make_selection_player_2(self, btn_colour):
        def selection_2():
            global colour_player_2, colour_player_1

            try:
                # colour_player_2 = btn_colour
                if (colour_player_1 != btn_colour) or (None == colour_player_1 == colour_player_2):
                    colour_player_2 = btn_colour
                    if colour_player_1 == colour_player_2:
                        raise Exception
                    elif colour_player_1 != colour_player_2:
                        self.colour_piker_shower_2(btn_colour)

            except Exception:
                colour_player_2 = btn_colour
        return selection_2

    def colour_piker_shower_1(self, btn_colour):
        if btn_colour == "background-color: rgb(255, 0, 0);":
            self.colour_red_player_1.setStyleSheet(
                "background-color: rgb(255, 0, 0); border: 10px solid black;border-radius: 15px")

            self.colour_green_player_1.setStyleSheet(
                "background-color: rgb(0, 255, 0); border: none;border-radius: 15px")
            self.colour_blue_player_1.setStyleSheet(
                "background-color: rgb(0, 0, 255); border: none;border-radius: 15px")
        if btn_colour == "background-color: rgb(0, 255, 0);":
            self.colour_green_player_1.setStyleSheet(
                "background-color: rgb(0, 255, 0); border: 10px solid black;border-radius: 15px")

            self.colour_red_player_1.setStyleSheet(
                "background-color: rgb(255, 0, 0); border: none;border-radius: 15px")
            self.colour_blue_player_1.setStyleSheet(
                "background-color: rgb(0, 0, 255); border: none;border-radius: 15px")
        if btn_colour == "background-color: rgb(0, 0, 255);":
            self.colour_blue_player_1.setStyleSheet(
                "background-color: rgb(0, 0, 255); border: 10px solid black;border-radius: 15px")

            self.colour_green_player_1.setStyleSheet(
                "background-color: rgb(0, 255, 0); border: none;border-radius: 15px")
            self.colour_red_player_1.setStyleSheet(
                "background-color: rgb(255, 0, 0); border: none;border-radius: 15px")

    def colour_piker_shower_2(self, btn_colour):
        if btn_colour == "background-color: rgb(255, 0, 0);":
            self.colour_red_player_2.setStyleSheet(
                "background-color: rgb(255, 0, 0); border: 10px solid black;border-radius: 15px")

            self.colour_green_player_2.setStyleSheet(
                "background-color: rgb(0, 255, 0); border: none;border-radius: 15px")
            self.colour_blue_player_2.setStyleSheet(
                "background-color: rgb(0, 0, 255); border: none;border-radius: 15px")
        if btn_colour == "background-color: rgb(0, 255, 0);":
            self.colour_green_player_2.setStyleSheet(
                "background-color: rgb(0, 255, 0); border: 10px solid black;border-radius: 15px")

            self.colour_red_player_2.setStyleSheet(
                "background-color: rgb(255, 0, 0); border: none;border-radius: 15px")
            self.colour_blue_player_2.setStyleSheet(
                "background-color: rgb(0, 0, 255); border: none;border-radius: 15px")
        if btn_colour == "background-color: rgb(0, 0, 255);":
            self.colour_blue_player_2.setStyleSheet(
                "background-color: rgb(0, 0, 255); border: 10px solid black;border-radius: 15px")

            self.colour_green_player_2.setStyleSheet(
                "background-color: rgb(0, 255, 0); border: none;border-radius: 15px")
            self.colour_red_player_2.setStyleSheet(
                "background-color: rgb(255, 0, 0); border: none;border-radius: 15px")

    def yes_first(self):
        global first
        first = False
        self.game()

    def no_first(self):
        global first
        first = True
        self.game()

    def update_label(self):
        try:
            info_1 = self.player_1_textbox.text()
            self.player_1_textbox.setText(info_1.upper())

            info_2 = self.player_2_textbox.text()
            self.player_2_textbox.setText(info_2.upper())
        except Exception:
            pass






if __name__ == "__main__":
    
    app = QtWidgets.QApplication(sys.argv)
    window = Application()
    window.show()

    timer = QtCore.QTimer()
    timer.start(10)
    try:
        timer.timeout.connect(window.update_label)
    except Exception:
        pass
    

    currentExitCode = app.exec_()
